# Build stage with Spack pre-installed and ready to be used
FROM c2sm/spack-mpich:3.4.3 AS builder
ENV INT2LM_SPEC="int2lm@c2sm-master%nvhpc ^$MPICH_SPEC"

# install dummy slurm
RUN apt-get -yqq update \
 && apt-get -yqq install --no-install-recommends \
        slurm \
 && locale-gen en_US.UTF-8 \
 && pip3 install boto3 \
 && rm -rf /var/lib/apt/lists/*

RUN echo "  slurm:" >> /root/.spack/packages.yaml && \
    echo "      buildable: false" >> /root/.spack/packages.yaml && \
    echo "      externals:" >> /root/.spack/packages.yaml && \
    echo "      - spec: slurm%gcc" >> /root/.spack/packages.yaml && \
    echo "        prefix: /usr" >> /root/.spack/packages.yaml

# install int2lm
RUN --mount=type=ssh spack install --only dependencies $INT2LM_SPEC

# change name of linked mpich lib from mpich to mpichf90
COPY int2lm-mpichf90.patch /opt/spack-c2sm/int2lm-mpichf90.patch
RUN cd /opt/spack-c2sm && git apply int2lm-mpichf90.patch

RUN --mount=type=ssh spack install -v --only package $INT2LM_SPEC

# Clone int2lm
RUN mkdir -p /opt/git
RUN --mount=type=ssh git clone --branch docker git@github.com:mjaehn/int2lm.git /opt/git/int2lm && \
    cd /opt/git/int2lm/test/testsuite && \
    ./data/get_data.sh && \
    ln -s /root/int2lm/int2lm .

# Paths
RUN echo $(spack find --paths int2lm | grep -o -P "/opt/spack-install/.*")/bin > /opt/int2lm

RUN echo $(spack find --paths cosmo-eccodes-definitions | grep -o -P "/opt/spack-install/.*") > /opt/cosmo-eccodes-definitions

RUN echo $(spack find --paths eccodes | grep -o -P "/opt/spack-install/.*") > /opt/eccodes

# GRIB definition paths
RUN echo "export GRIB_SAMPLES_PATH=$(cat /opt/cosmo-eccodes-definitions)/cosmoDefinitions/samples" >> /etc/profile
RUN echo "export GRIB_DEFINITION_PATH=$(cat /opt/cosmo-eccodes-definitions)/cosmoDefinitions/definitions/:$(cat /opt/eccodes)/share/eccodes/definitions" >> /etc/profile

RUN ln -s $(cat /opt/int2lm) /root/int2lm

RUN ldconfig

#ENTRYPOINT ["/bin/bash", "/opt/spack/share/spack/docker/entrypoint.bash"]
#CMD ["interactive-shell"]
ENTRYPOINT ["/bin/bash", "--rcfile", "/etc/profile", "-l" ,"-c"]
WORKDIR /root

